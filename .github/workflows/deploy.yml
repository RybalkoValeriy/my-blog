name: Deploy Blog

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check and Install Netcat
        run: |
          if ! command -v nc &> /dev/null
          then
            echo "Netcat (nc) is not installed. Installing now..."
            sudo apt update && sudo apt install -y netcat-openbsd
          else
            echo "Netcat (nc) is already installed."
          fi

      - name: Check if Port 22 is Open
        env:
          MY_SH: ${{ secrets.SERVER_HOST }}
        run: |
          echo "Checking SSH connection to: $MY_SH"
          nc -zv 192.168.178.60 22
          if [ $? -ne 0 ]; then
            echo "ERROR: Port 22 is closed or unreachable."
            exit 1  # Fail the workflow and stop further execution
          else
            echo "Port 22 is open and reachable."
          fi

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the project
        run: pnpm run build

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          echo "Starting rsync to copy files to the server..."
          sshpass -p "$SERVER_PASSWORD" rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude='.git' ./ $SERVER_USER@$SERVER_HOST:$SERVER_PATH
          if [ $? -ne 0 ]; then
            echo "rsync failed. Checking SSH connection..."
            sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no -v $SERVER_USER@$SERVER_HOST "echo 'SSH connection successful'"
            if [ $? -ne 0 ]; then
              echo "SSH connection failed. Please check server IP, port, and firewall settings."
              exit 1
            fi
          fi
          echo "Files copied to the server."

          echo "Connecting to the server to build and run Docker container..."
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "
            echo 'Navigating to the server path: $SERVER_PATH'
            cd $SERVER_PATH &&
            echo 'Building Docker image...'
            sudo docker build -t blog-image . &&
            echo 'Stopping existing Docker container...'
            sudo docker stop blog || true &&
            echo 'Removing existing Docker container...'
            sudo docker rm blog || true &&
            echo 'Running new Docker container...'
            sudo docker run -d --tmpfs /tmp --name blog --network tunnel -p 3000:3000 blog-image
          "
          echo "Deployment completed."
