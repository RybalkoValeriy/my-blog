name: Deploy Blog

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the project
        run: pnpm run build

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          echo "Saving SSH private key..."
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          echo "SSH private key saved and permissions set."

          echo "Starting rsync to copy files to the server..."
          echo 'The server path: $SERVER_PATH'
          rsync -avz -e "ssh -i private_key" --exclude='.git' ./ $SERVER_USER@$SERVER_HOST:$SERVER_PATH
          if [ $? -ne 0 ]; then
            echo "rsync failed. Checking SSH connection..."
            ssh -i private_key -v $SERVER_USER@$SERVER_HOST "echo 'SSH connection successful'"
            if [ $? -ne 0 ]; then
              echo "SSH connection failed. Please check server IP, port, and firewall settings."
              exit 1
            fi
          fi
          echo "Files copied to the server."

          echo "Connecting to the server to build and run Docker container..."
          ssh -i private_key $SERVER_USER@$SERVER_HOST "
            echo 'Navigating to the server path: $SERVER_PATH'
            cd $SERVER_PATH &&
            echo 'Building Docker image...'
            sudo docker build -t blog-image . &&
            echo 'Stopping existing Docker container...'
            sudo docker stop blog || true &&
            echo 'Removing existing Docker container...'
            sudo docker rm blog || true &&
            echo 'Running new Docker container...'
            sudo docker run -d --tmpfs /tmp --name blog --network tunnel -p 3000:3000 blog-image
          "
          echo "Deployment completed."
